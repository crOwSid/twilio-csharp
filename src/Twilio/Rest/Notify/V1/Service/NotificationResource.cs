/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
/// 
/// NotificationResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Notify.V1.Service 
{

    public class NotificationResource : Resource 
    {
        public sealed class PriorityEnum : StringEnum 
        {
            private PriorityEnum(string value) : base(value) {}
            public PriorityEnum() {}
            public static implicit operator PriorityEnum(string value)
            {
                return new PriorityEnum(value);
            }

            public static readonly PriorityEnum High = new PriorityEnum("high");
            public static readonly PriorityEnum Low = new PriorityEnum("low");
        }

        private static Request BuildCreateRequest(CreateNotificationOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Notify,
                "/v1/Services/" + options.PathServiceSid + "/Notifications",
                client.Region,
                postParams: options.GetParams()
            );
        }

        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create Notification parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Notification </returns> 
        public static NotificationResource Create(CreateNotificationOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create Notification parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Notification </returns> 
        public static async System.Threading.Tasks.Task<NotificationResource> CreateAsync(CreateNotificationOptions options, 
                                                                                          ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// create
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="identity"> Delivery will be attempted only to Bindings with an Identity in this list. </param>
        /// <param name="tag"> Delivery will be attempted only to Bindings that have all of the Tags in this list. </param>
        /// <param name="body"> Indicates the notification body text. </param>
        /// <param name="priority"> Two priorities defined: low and high. </param>
        /// <param name="ttl"> This parameter specifies how long the notification is valid. </param>
        /// <param name="title"> Indicates the notification title. </param>
        /// <param name="sound"> Indicates a sound to be played. </param>
        /// <param name="action"> Specifies the actions to be displayed for the notification. </param>
        /// <param name="data"> This parameter specifies the custom key-value pairs of the notification's payload. </param>
        /// <param name="apn"> APNS specific payload that overrides corresponding attributes in a generic payload for Bindings
        ///           with the apn BindingType. </param>
        /// <param name="gcm"> GCM specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with gcm BindingType. </param>
        /// <param name="sms"> SMS specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with sms BindingType. </param>
        /// <param name="facebookMessenger"> Messenger specific payload that overrides corresponding attributes in generic
        ///                         payload for Bindings with facebook-messenger BindingType. </param>
        /// <param name="fcm"> FCM specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with fcm BindingType. </param>
        /// <param name="segment"> The segment </param>
        /// <param name="alexa"> The alexa </param>
        /// <param name="toBinding"> The destination address in a JSON object. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Notification </returns> 
        public static NotificationResource Create(string pathServiceSid, 
                                                  List<string> identity = null, 
                                                  List<string> tag = null, 
                                                  string body = null, 
                                                  NotificationResource.PriorityEnum priority = null, 
                                                  int? ttl = null, 
                                                  string title = null, 
                                                  string sound = null, 
                                                  string action = null, 
                                                  object data = null, 
                                                  object apn = null, 
                                                  object gcm = null, 
                                                  object sms = null, 
                                                  object facebookMessenger = null, 
                                                  object fcm = null, 
                                                  List<string> segment = null, 
                                                  object alexa = null, 
                                                  List<string> toBinding = null, 
                                                  ITwilioRestClient client = null)
        {
            var options = new CreateNotificationOptions(pathServiceSid){Identity = identity, Tag = tag, Body = body, Priority = priority, Ttl = ttl, Title = title, Sound = sound, Action = action, Data = data, Apn = apn, Gcm = gcm, Sms = sms, FacebookMessenger = facebookMessenger, Fcm = fcm, Segment = segment, Alexa = alexa, ToBinding = toBinding};
            return Create(options, client);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="identity"> Delivery will be attempted only to Bindings with an Identity in this list. </param>
        /// <param name="tag"> Delivery will be attempted only to Bindings that have all of the Tags in this list. </param>
        /// <param name="body"> Indicates the notification body text. </param>
        /// <param name="priority"> Two priorities defined: low and high. </param>
        /// <param name="ttl"> This parameter specifies how long the notification is valid. </param>
        /// <param name="title"> Indicates the notification title. </param>
        /// <param name="sound"> Indicates a sound to be played. </param>
        /// <param name="action"> Specifies the actions to be displayed for the notification. </param>
        /// <param name="data"> This parameter specifies the custom key-value pairs of the notification's payload. </param>
        /// <param name="apn"> APNS specific payload that overrides corresponding attributes in a generic payload for Bindings
        ///           with the apn BindingType. </param>
        /// <param name="gcm"> GCM specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with gcm BindingType. </param>
        /// <param name="sms"> SMS specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with sms BindingType. </param>
        /// <param name="facebookMessenger"> Messenger specific payload that overrides corresponding attributes in generic
        ///                         payload for Bindings with facebook-messenger BindingType. </param>
        /// <param name="fcm"> FCM specific payload that overrides corresponding attributes in generic payload for Bindings
        ///           with fcm BindingType. </param>
        /// <param name="segment"> The segment </param>
        /// <param name="alexa"> The alexa </param>
        /// <param name="toBinding"> The destination address in a JSON object. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Notification </returns> 
        public static async System.Threading.Tasks.Task<NotificationResource> CreateAsync(string pathServiceSid, 
                                                                                          List<string> identity = null, 
                                                                                          List<string> tag = null, 
                                                                                          string body = null, 
                                                                                          NotificationResource.PriorityEnum priority = null, 
                                                                                          int? ttl = null, 
                                                                                          string title = null, 
                                                                                          string sound = null, 
                                                                                          string action = null, 
                                                                                          object data = null, 
                                                                                          object apn = null, 
                                                                                          object gcm = null, 
                                                                                          object sms = null, 
                                                                                          object facebookMessenger = null, 
                                                                                          object fcm = null, 
                                                                                          List<string> segment = null, 
                                                                                          object alexa = null, 
                                                                                          List<string> toBinding = null, 
                                                                                          ITwilioRestClient client = null)
        {
            var options = new CreateNotificationOptions(pathServiceSid){Identity = identity, Tag = tag, Body = body, Priority = priority, Ttl = ttl, Title = title, Sound = sound, Action = action, Data = data, Apn = apn, Gcm = gcm, Sms = sms, FacebookMessenger = facebookMessenger, Fcm = fcm, Segment = segment, Alexa = alexa, ToBinding = toBinding};
            return await CreateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a NotificationResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> NotificationResource object represented by the provided JSON </returns> 
        public static NotificationResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<NotificationResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The sid
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// The account_sid
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The service_sid
        /// </summary>
        [JsonProperty("service_sid")]
        public string ServiceSid { get; private set; }
        /// <summary>
        /// The date_created
        /// </summary>
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }
        /// <summary>
        /// List of Identities.
        /// </summary>
        [JsonProperty("identities")]
        public List<string> Identities { get; private set; }
        /// <summary>
        /// List of Tags
        /// </summary>
        [JsonProperty("tags")]
        public List<string> Tags { get; private set; }
        /// <summary>
        /// The segments
        /// </summary>
        [JsonProperty("segments")]
        public List<string> Segments { get; private set; }
        /// <summary>
        /// Two priorities defined: low and high.
        /// </summary>
        [JsonProperty("priority")]
        [JsonConverter(typeof(StringEnumConverter))]
        public NotificationResource.PriorityEnum Priority { get; private set; }
        /// <summary>
        /// This parameter specifies how long the notification is valid.
        /// </summary>
        [JsonProperty("ttl")]
        public int? Ttl { get; private set; }
        /// <summary>
        /// Indicates the notification title.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; private set; }
        /// <summary>
        /// Indicates the notification body text.
        /// </summary>
        [JsonProperty("body")]
        public string Body { get; private set; }
        /// <summary>
        /// Indicates a sound to be played.
        /// </summary>
        [JsonProperty("sound")]
        public string Sound { get; private set; }
        /// <summary>
        /// Specifies the actions to be displayed for the notification.
        /// </summary>
        [JsonProperty("action")]
        public string Action { get; private set; }
        /// <summary>
        /// This parameter specifies the custom key-value pairs of the notification's payload.
        /// </summary>
        [JsonProperty("data")]
        public object Data { get; private set; }
        /// <summary>
        /// APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.
        /// </summary>
        [JsonProperty("apn")]
        public object Apn { get; private set; }
        /// <summary>
        /// GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.
        /// </summary>
        [JsonProperty("gcm")]
        public object Gcm { get; private set; }
        /// <summary>
        /// FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.
        /// </summary>
        [JsonProperty("fcm")]
        public object Fcm { get; private set; }
        /// <summary>
        /// SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.
        /// </summary>
        [JsonProperty("sms")]
        public object Sms { get; private set; }
        /// <summary>
        /// Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.
        /// </summary>
        [JsonProperty("facebook_messenger")]
        public object FacebookMessenger { get; private set; }
        /// <summary>
        /// The alexa
        /// </summary>
        [JsonProperty("alexa")]
        public object Alexa { get; private set; }

        private NotificationResource()
        {

        }
    }

}